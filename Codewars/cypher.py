from cv2 import circle


alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"


def shift_letter(cipher_letter: str, key_letter: str) -> str:
    return alpha[find_diff(cipher_letter, key_letter)]


def find_diff(cipher_letter: str, key_letter: str) -> int:
    cipher_pos = alpha.find(cipher_letter)
    key_pos = alpha.find(key_letter)
    return cipher_pos - key_pos


def calculate_likeness(freqs: dict) -> int:
    englishLetterFreq = {
        "E": 12.70,
        "T": 9.06,
        "A": 8.17,
        "O": 7.51,
        "I": 6.97,
        "N": 6.75,
        "S": 6.33,
        "H": 6.09,
        "R": 5.99,
        "D": 4.25,
        "L": 4.03,
        "C": 2.78,
        "U": 2.76,
        "M": 2.41,
        "W": 2.36,
        "F": 2.23,
        "G": 2.02,
        "Y": 1.97,
        "P": 1.93,
        "B": 1.29,
        "V": 0.98,
        "K": 0.77,
        "J": 0.15,
        "X": 0.15,
        "Q": 0.10,
        "Z": 0.07,
    }
    english_letters = list(englishLetterFreq.keys())
    likeness = 0
    for k in freqs.keys():
        likeness += abs(freqs[k] - englishLetterFreq[k])

    return likeness


def sort_by_value(freqs: dict) -> dict:
    return dict(sorted(freqs.items(), reverse=True, key=lambda item: item[1]))


def count_freqs(letters: list) -> dict:
    freqs = {}
    total = len(letters)
    for c in letters:
        if c in freqs:
            freqs[c] += 1
        else:
            freqs[c] = 1
    for c in freqs:
        freqs[c] = (freqs[c] / total) * 100
    return freqs


def get_keyword(ciphertext, key_len):
    letter_columns = [[] for _ in range(key_len)]

    for i, _ in enumerate(ciphertext):
        letter_columns[i % key_len].append(ciphertext[i])

    ans = ""
    for i in range(key_len):
        min_likeness = 999999999
        for k in alpha:
            trial = [shift_letter(c, k) for c in letter_columns[i]]
            freqs = count_freqs(trial)
            l = calculate_likeness(freqs)
            if min_likeness > l:
                min_likeness = l
                key_letter = k
        ans += key_letter

    print(f"KEYWORD: {ans}")
    return ans


phrase = "NSWXARWJGEXIJCZWUZLOAWFJFTUIMUVFEWHWPEEVVCYENYSGVVECSRZLGFDRZBPKWPMIYTFFGQDRJOKOTWWIWNVKUOBEXOLLZFDCOWZLJCXXQSZFITUIMUVFVLVEJDKZGSVWWYNANZKERERFKRLSOYEUTOWMYLVLVSUJNEHMGBFCEFKZGSVWWYZKCPRYPTYWHFHUQEELWGHSBXISAGWSPRVSVNHFNAJAPEDXWRUAHTHVANKSWHKSNSYSXSKEXIKKYVLGDCRFDSUIBLVUVSGMJTYWKFXWAOWDGHWINSYWOWQKSAPKYFLXENXKVMOIBOIWZOPTHEZKXWVMXLPVKTIINEELHFRQBALDMBHVOLVLVSUFEGISOHUMCRREYCUHBRVIWSQGEEJOQFGPANXLJOQHOEELGBFIHEEYVVFEJBVUCZFYHAKWFTRVOPVUKTLGWUKZQFVEJDLKGRWSLRFNGCUHESGJQJHEQTYGTGKMLOWLGLWWAVVFHCUEQTYGTGZLKSVKVMOIOAIWPCWWKDZNGFJIJTRUEIUEPERNGFDKALVLVSUJNEHMGBFMASTSPCQPUBVYNSDRADSQCBDPUZZFIOOENGVSOCXRPOWJGDUIOEELCHLZATVPVKLXDTYWCJDMHASANWWCKFDGFSURYODHWHLRCAEVECOPACKAQBVSBLRJISWITTTGTDRVWSLUJQDPYUCSVWRROAIWGOVMHYDSFSHBWMGDGGFEJBVVTOZRBRFECJDVEEKQQTVSQRTWUDUIOSIWRCUXENXJGZLKEOLKVSAXOSTAGBWMBITLGLWWWNUYGBHVWLWAEHLSJAEVVVHVAAIWFWIJARVFESVIOPVUKOOPUFFJISQINACXKQWMKNNAVVWLAPFKKHLSJOWZCBGMSIKZJPHGKMZFIARVACFEOCQLARSWTHVDEMZFJWVGHAJKKQLRPRFVWQWSNYTJADWSCRRHJMWITTTGFSVEJDJWEFHXSRZLKBJKEVVKVVHIJGCAUVOIPTVJHFHUQEEUAGHUQEEUGOVIPAFFTWVLZLWUOIJCLWSNMXAUVTYWOCVXYODEQBOIPTVJROLVOAJLJVHEJRVWTWQSJAKFFGWIOEEGHHHIZOILKVLEOTFSPRWLAMFKVQRQIOEVQIEPADCWVHHVOAJDNSHWOOFLVTIVNNEHRQFXDEKGRHZIHVVDGHWINSTGODUMOERTQIWSBTYWVCWEHUJSISWLATFHGWJLPLVLVSUWYODHTWVIWBFMVCIXDEKGVOOYOAXWNSWXARWJGEXIJCPSUOIYJCKAQBRJNAECEOQFAFZLVSGAALCTAGHZARRDTOQOBUEUVWRROWZLJHKIPWFHCFDQATVJECFLKBVLCFDRGFLFEHLSJBVAPUWLABVKVOQSPHVJTOQOBUEUVWRRSIKZPCDHFUJLCPOIBRVWROUEIEKWTOOWKFZLUHKIHEKLGFIVAQLWPQBHESKJKPXXEOEJGOVSJASDAKHPHTYWUOPIBUEUVWRRDAJTGSQYOEULQTLXPHVSOWQSWCZVHFHUQEEUAWQTNOKWKBVIMUVFESVEOPPMUWQKPHVNKQFMLHVJQFVSIEFLJSUGEPYWTPDWADFFCGWVWDUDKBJGDETCGFESWRULADLGWLCQWGHWWMEWOCQMYSLUJOVEOIELQSUVZRFHRWQKPHVKGQRRZRKGTSPIIBVJVVHXKPVAIVWGDAISEHHVOTYWWGHSBLVLVSUJNEHMGBFMASRFFTUIMUVFEMDRWLPKKGSPWYJSHIQHWMVFVOOVKLVAPQUCLTFYTOPWWNUKGJHVWLNGTRSYVZCWIOPIOIEUNIGMJGYSPUPEJSTJCPEPAAEVVVHXALVNKGLSJGREGGKSSWYWGZRJBOILWBHSJEFXVVHIWRCAGGWHASTJKDWMKNZFEZDWOITSNZLXARRLWFHSBAGHNMLRCTYWMBRAHEUYGCIIJGCAUVOIPTVJHFHUQEEUAHRWKLMAPUDGNYGLQUUEIIJXQIQHENVSRCHWBADGWGVXKRPLJSJSHDSMIKKINEKZGAHXDOUAUGXGYEJKHIOPUAGHNWHHPOUWEWSLARREGGVECEZFUHUYYTZFICQXDENZGFHEXOLLUCIEPRVSUIUIDIUVGBECYAGLCWQOEDUDGHWINFIWSIHRYIVKJOGEOTIGPUHJBETLQBWLADVKKUQSBSFEGYHCXORJFZDCKUKKVVHQKSKXTSTYANKDGHWINSRJGCQXDESGVHRQNONGHHKIXLZUMSQWZEIXGFWCLENJKHHVWNULJSKSIEIGYCIXDEUNQFDOOIDHNWIMADBWAPREND"

get_keyword(phrase, 8)
